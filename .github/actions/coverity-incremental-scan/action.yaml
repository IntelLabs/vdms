name: 'Coverity Incremental Scan'
description: 'Runs Coverity Scan on Pull Request and compare to Server'
inputs:
  repo_dir:
    description: 'Directory of main code where JSON located'
    required: true
  github_repo_dir:
    description: 'Name of repo directory in coverity results'
  github_ref:
    description: 'Commit of current PR'
    required: true
  prNumber:
    description: 'Number of PR to be scanned'
    required: true
  docker_container_name:
    description: 'Name of running container with code and coverity installed'
    required: true
  docker_container_tag:
    description: 'Tag of docker image with code and coverity installed'
    required: true
  modified_files:
    description: 'List of modified files'
    required: true
runs:
  using: composite
  steps:
    - name: Coverity Scan in Docker
      id: coverity_scan
      continue-on-error: true
      shell: bash
      run: |
        docker run --rm -d -v ${{ inputs.repo_dir }}:/local_repo \
          --name ${{ inputs.docker_container_name }} \
          ${{ inputs.docker_container_tag }}

        docker exec -w /vdms/build ${{ inputs.docker_container_name }} bash -c "cov-configure -gcc --xml-option=skip_file:'/pmgd/' && \
          cov-configure --compiler c++ --comptype g++ --template --xml-option=skip_file:'/pmgd/'"

        docker exec -w /vdms/build ${{ inputs.docker_container_name }} bash -c "rm -rf * && cmake -DCODE_COVERAGE=ON .. && cov-build --dir /coverity-results --desktop make"

        docker exec ${{ inputs.docker_container_name }} bash -c "cov-run-desktop --dir /coverity-results --set-new-defect-owner false --strip-path /vdms \
          --url $COV_URL --stream $COVERITY_STREAM --user ${COV_USER} --password ${COVERITY_PASSPHRASE} \
          --present-in-reference false --ignore-uncapturable-inputs true --impact-regex 'Medium|High' \
          --relative-paths true --sort file,classification:d \
          --json-output-v7 /local_repo/coverity-results.json ${{ inputs.modified_files }}"

    - name: Parse JSON
      id: parse_json
      if: steps.coverity_scan.outcome == 'success'
      shell: bash
      run: |
        results_md=${PWD}/.github/actions/coverity-incremental-scan/coverity_results.md

        python3 .github/actions/coverity-incremental-scan/src/main.py \
          --file ${{ inputs.repo_dir }}/coverity-results.json \
          --github_repo_dir ${{ inputs.github_repo_dir }} \
          --github_ref ${{ inputs.github_ref }} \
          --outfile ${results_md}

        docker stop ${{ inputs.docker_container_name }} || true

