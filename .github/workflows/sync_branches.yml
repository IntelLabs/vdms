name: 'External Branch Sync'

on:
  workflow_dispatch:
    inputs:
      sync:
        description: 'Sync external_* branches'
        required: true
        type: boolean
        default: true
  schedule:
    - cron: '0 0 * * *' # 00:00 each day

jobs:
  sync_branch:
      name: Sync latest commits from upstream repo

      runs-on:
          group: intellabs-vdms-runners
          labels: vdms-check-in

      strategy:
          fail-fast: true
          matrix:
              include:
              - internal_branch: external_master
                external_branch: master
                merge_branch: external_vdms/master

              - internal_branch: external_develop
                external_branch: develop
                merge_branch: external_vdms/develop

      steps:
          - name: Checkout Branch ${{ matrix.internal_branch }}
            uses: actions/checkout@v4
            with:
              ref:  ${{ matrix.internal_branch }}

          - id: check_remote
            run: |
              is_remote_set='false'
              if [[ $(git remote -v) == *"external_vdms"* ]]; then
                is_remote_set='true'
              fi

              echo "remote_set=$is_remote_set" >> $GITHUB_OUTPUT

          - name: Add Remote
            if: contains(steps.check_remote.outputs.remote_set , 'false')
            run: |
              git remote add -t ${{ matrix.external_branch }} external_vdms https://github.com/IntelLabs/vdms.git || true

          - name: Fetch external branches
            id: git_check
            run: |
              git fetch external_vdms

              returnValue="$(git merge ${{ matrix.merge_branch }})"

              merge_flag='merge'
              if [[ ${returnValue} == *"CONFLICT"* ]]; then
                merge_flag='conflict'
              elif [[ ${returnValue} == *"Already up to date"* ]]; then
                merge_flag='up_to_date'
              fi

              echo "merge_external=$merge_flag" >> $GITHUB_OUTPUT

          - if: ${{ steps.git_check.outputs.merge_external == 'conflict' }}
            run: |
              echo "There are conflicts during merge...Merge manually."
              exit 1

          - name: Update ${{ matrix.internal_branch }}
            if: ${{ steps.git_check.outputs.merge_external == 'merge' }}
            run: |
              git config --global user.name ${{ secrets.FACELESS_NAME }}
              git config --global user.email ${{ secrets.FACELESS_NAME }}@intel.com
              git commit -am "Merge ${{ matrix.merge_branch }} into ${{ matrix.internal_branch }}"
              git push --set-upstream origin ${{ matrix.internal_branch }}
              echo "New commits were found to sync."

          - if: ${{ steps.git_check.outputs.merge_external == 'up_to_date' }}
            run: echo "There were no new commits."

